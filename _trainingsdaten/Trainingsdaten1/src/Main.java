import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.Date;

public class Main {

	public static void main(String[] args) {
		Person[] personen = new Person[2];
		Geodaten[] geodaten = new Geodaten[2];
		// BufferedReader br = new BufferedReader(new
		// InputStreamReader(System.in));
		// System.out.print("Enter String");
		try {
			PrintWriter writer = new PrintWriter("sample14a.csv", "UTF-8");
			PrintWriter geowriter = new PrintWriter("sample14b.csv", "UTF-8");

			int[][] wahrscheinlichkeitsverteilung = {
					// { 6, 7, 7, 7, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 10, 10,
					// 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13,
					// 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14,
					// 14, 14, 14, 14, 14, 14,15, 15, 15, 15, 15, 15, 15, 15,
					// 16, 16, 16, 16, 16, 16, 17,
					// 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18,
					// 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19,
					// 19, 19, 19,
					// 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20,
					// 21, 21, 21, 21, 22, 22, 22 },
					{ 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19,
							19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22,
							22 },
					{ 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19,
							19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22,
							22 },
					{ 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19,
							19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22,
							22 },
					{ 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19,
							19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22,
							22 },
					{ 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19,
							19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22,
							22 },
					{ 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19,
							19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22,
							22 },
					{ 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19,
							19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22,
							22 },
					{ 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19,
							19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22,
							22 },
					{ 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19,
							19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22,
							22 },
					{ 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19,
							19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22,
							22 },
					{ 6, 7, 7, 7, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
							11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 14, 14, 14,
							14, 14, 14 },
					{ 6, 7, 7, 7, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
							11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 14, 14, 14,
							14, 14, 14 },
					{ 6, 7, 7, 7, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
							11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 14, 14, 14,
							14, 14, 14 },
					{ 6, 7, 7, 7, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
							11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 14, 14, 14,
							14, 14, 14 },
					{ 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14,
							14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15 },
					{ 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14,
							14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15 },
					{ 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14,
							14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15 },
					{ 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14,
							14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15 },
					{ 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14,
							14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15 },
					{ 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14,
							14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15 },

			};
			double minValuelon = 48.996569;
			double maxValuelon = 49.013999;
			double minValuelat = 8.360432;
			double maxValuelat = 8.434804;
			double breite = 5.47;
			double hoehe = 2.03;
			double variable = ((maxValuelon - minValuelon) / breite) / ((maxValuelat - minValuelat) / hoehe);
			System.out.println("Variable:" + variable);

			double[][] geoData = {{8.426613, 49.012326},
					{8.426661, 49.011200},
					{8.426865, 49.011221},
					{8.427648, 49.011320},
					{8.426339, 49.011813},
					{8.424499, 49.011961},
					{8.423941, 49.011757},
					{8.423313, 49.011655},
					{8.423394, 49.010866},
					{8.425156, 49.010267},
					{8.424748, 49.010267},
					{8.428106, 49.010612},
					{8.427891, 49.01008}};
			
			int anzahl = 13;
			for (int i = 0; i < anzahl; i++) {

				// String line = (br.readLine());

				// String[] geo = line.split(", ");
				// double lon = Double.parseDouble(geo[0]);
				// double lat = Double.parseDouble(geo[1]);
				// Daten in Datenbank
				//double lon = minValuelon + (Math.random() * (maxValuelon - minValuelon));
				//double lat = minValuelat + (Math.random() * (maxValuelat - minValuelat));
				
				Person person = new Person(geoData[i][0], geoData[i][1]);
				
				// Geodaten geodatei = new Geodaten(lon, lat);
				// if(i == 0) {
				// geowriter.println("[");
				// System.out.println("[");
				// }
				int a = (int) (Math.random() * 20);
				for (int j = 0; j < 5; j++) {
					int wochentag = (int) (Math.random() * 7);
					int stunde = wahrscheinlichkeitsverteilung[a][(int) (Math.random()
							* wahrscheinlichkeitsverteilung[a].length)];
					int minute = (int) (Math.random() * 60);

					Date date = new Date(2017, 06, 19 + wochentag, stunde, minute, 0);
					person.addDate(date);
					// if (8 < stunde && stunde <= 9) {
					//
					//
					// if (i == anzahl - 1) {
					// geowriter.println(geodatei.toString() + ",");
					// } else {
					// geowriter.println(geodatei.toString() + ",");
					// System.out.println(geodatei + ",");
					// }
					//
					// //System.out.println(geodatei);
					// }

				}
				writer.println(person);
				// geowriter.println("]");

				// geowriter.close();
			}
			writer.close();
		} catch (Exception nfe) {
			System.err.println("Invalid Format!");

		}

	}

}
