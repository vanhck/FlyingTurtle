/**
 * Berechne optimalen Standort.
 * 1-Median-Problem mit l2-Metrik
 * 
 * Verwende Weizfeld Verfahren.
 * Annahme: Bereich klein genug, damit 
 * 
 * {standorte:[{"lon": lon, "lat": lat}, ... ]}
 * @param {*} standorte {standorte:[{"lon": lon, "lat": lat}, ... ]}
 */

var werte = [[49.00172955972003,8.36544201422444],[49.012019127126386,8.374425840716237],[49.00854929473359,8.430781449272182],[49.0076879695304,8.415096524079779],[49.003284096941314,8.389053722873058],[48.99801521407059,8.41335544617917],[49.007299875780646,8.424825287159353],[49.011805119795206,8.433229595810534],[48.9979941883342,8.364874583496096],[48.99813405248644,8.385207290814218],[49.00463107558723,8.40570131281972],[48.998024619996464,8.425030187586039],[49.008612188255604,8.405397309252896],[49.00905829344772,8.431182225274362],[49.00923446655514,8.412592449234591],[49.00512355540359,8.422411998950343],[49.013257530664085,8.4292102177515],[49.01335976528376,8.417663722900203],[49.00704332837752,8.428859734024021],[48.99747686245987,8.419192219434718],[49.00116686827034,8.374912588584948],[49.00798920203707,8.41001617162559],[48.99953187325184,8.388766110198851],[49.00222088012023,8.431595147808522],[49.000886345449445,8.411460912673016],[49.00833347418935,8.404321358451595],[49.00962044881172,8.420182081278343],[49.01214415142795,8.4013037071045],[49.00066392758894,8.414690957761232],[49.00549996857874,8.401016012183302],[49.01302426343794,8.416615703565986],[48.99741241020792,8.376330053289472],[49.00051118067325,8.405193562432778],[49.01241455115298,8.425613351735285],[49.00613126622406,8.428184874100154],[49.011415107645234,8.379882512427304],[49.01238167151257,8.391636912620248],[49.00899923652992,8.434246424543304],[49.00904581980714,8.38344892021365],[49.00877462341943,8.400731827013805],[49.0073688964157,8.415657811605637],[49.0116875919355,8.4102921707204],[49.00450886796045,8.416101071731063],[49.00567172461488,8.402220320584874],[49.00304014650216,8.416107484789995],[49.01111866532289,8.431400955475866],[49.00615017512618,8.429267312067266],[49.008847304071054,8.425667586190986],[49.006491940254335,8.425983427809514],[48.998144738296205,8.43028567767185],[49.001385964972734,8.38006869886874],[49.01056550200867,8.426373918512347],[49.000212714195236,8.40328240318848],[48.99734595343822,8.431093644060581],[49.01312205527054,8.417294819420983],[49.012941674050325,8.401454575183468],[49.00451003781909,8.377946343180795],[49.00053325547224,8.422124984903453],[49.012541393572924,8.409383392846912],[48.9987434287177,8.42918968461399],[49.00525156541883,8.431584269915987],[48.99966507974408,8.395920713960775],[49.006000344855316,8.427906517109145],[49.012549369596776,8.420313846489874],[49.003466832191826,8.431866614408468],[49.01101482297448,8.423552152094105],[49.00524730963426,8.429497151045963],[48.997387277603366,8.36993057398272],[49.00988755529732,8.422240727393156],[49.00600180170215,8.428529686309822],[49.01094578293852,8.371003992152996],[49.00527732602091,8.433675415637445],[48.99840675443897,8.404253488665278],[48.999490670836266,8.398378855545525],[49.01165787588596,8.430835272206856],[49.0071868109097,8.410105964758529],[49.00980857792379,8.40846572612604],[49.00091607364089,8.409723399798894],[49.01032151884769,8.430394827147557],[48.998162847665384,8.429914824883971],[49.008517969629054,8.42613521270861],[49.00805250546947,8.387212251893786],[49.001890198558655,8.386608893844256],[48.9986316975598,8.377758624808878],[49.00139202531971,8.365268495047621],[49.00754758565208,8.425078338091406],[49.01174426753315,8.419948490551556],[49.0060619769917,8.379354337403436],[49.00610394218598,8.379596367608801],[48.99921512469064,8.425591063082953],[49.00203412591057,8.38504638934202],[49.01107797274922,8.371712186716431],[49.01388313483758,8.415671697979196],[49.007068276532785,8.426164468007483],[49.00265494347964,8.400131024084729],[49.00152908706095,8.412660158040403],[49.01248600609167,8.418524847204054],[49.007809414348735,8.43172158734706],[49.01050145308353,8.418443960057012],[49.01302509962164,8.433506193905494],[48.998573803802095,8.414451570909982],[48.999953539107615,8.411525285082124],[49.001862912227864,8.361044990012141],[49.00890977676195,8.378068924388833],[49.01233361722369,8.406152552607805],[48.99739156247415,8.430561138741895],[49.00474279400893,8.409406086504802],[49.011871288167534,8.422337361774911],[49.011619363305854,8.389074929552109],[49.00976034029994,8.404129877902964],[49.0096420440064,8.364759020786055],[49.010401678661616,8.400039338507566],[49.01329010896064,8.369501433922316],[49.01377944428616,8.433071744444643],[48.99974565907707,8.369362289371034],[49.00672871360314,8.414013231717554],[49.006683691810636,8.428936680188187],[49.012579152397464,8.419642449234747],[49.005742016167275,8.413630592414055],[49.01136410981947,8.406272167424602],[49.0126080284911,8.396328089596906],[48.99858948322891,8.426016341595979],[49.01329497293435,8.370906733799757],[49.011131987820896,8.402701055263542],[49.00803705324533,8.3664198767853],[49.00082416127801,8.400140802765167],[49.01220837322488,8.400289868159645],[49.00937240700879,8.415793314238563],[48.998425728714054,8.423085904928586],[49.00967898284997,8.368077159840231],[49.00855687626068,8.432699523847916],[49.004113835942285,8.413654437120751],[48.99925698490793,8.409545473018174],[49.003987433569336,8.421340975116744],[49.00083232196569,8.41628212711614],[49.0019650089126,8.429770920879472],[49.013786945362234,8.40507350881699],[49.00326738270068,8.434524646767587],[49.00866489803328,8.401019210062518],[49.01018112886066,8.430403984782894],[49.01153078595901,8.364819502509674],[49.00484933677699,8.410981993587114],[49.00322504314064,8.409655090987712],[49.00840513303618,8.425899136755744],[49.000334046288586,8.410853846177508],[49.00503358371193,8.40348248569706],[49.004020968394094,8.412449516127394],[49.00511524724923,8.42680258331493],[49.00078167820247,8.433633689564882],[49.00741526945683,8.379342165756539],[49.00178887576708,8.404809119368428],[48.9999139815674,8.4035863092477],[49.003057151435684,8.36052471492095],[49.00552883956447,8.411451126647096],[49.00052955796037,8.42904176746636],[49.005294618855494,8.371304975973024],[49.00077080327653,8.38395309056889],[49.006822379569975,8.421893452739198],[49.01267843743086,8.4009735894697],[49.001645265608765,8.434447655970674],[49.00721472980613,8.41135542383037],[49.01279019069918,8.381383905356529],[49.013312396660666,8.416714877277567],[49.001458181620116,8.365570145782776],[49.0129757349576,8.40521056827292],[49.00455539276534,8.415643106142264],[49.0067823735424,8.400979938600175],[49.01250965912937,8.428192350600337],[49.00950285155539,8.37397266392945],[49.00152807475196,8.404278801875426],[49.004103669370394,8.368929935819203],[49.01340007681467,8.414788106266064],[48.998441500627266,8.426044319261468],[48.99943138525498,8.422231729230004],[49.00432508097594,8.433936716128041],[49.01224072074875,8.414120371974121],[49.00498385128316,8.419021965590494],[49.008947949245105,8.42198023452784],[49.00242735658068,8.41715349605173],[49.005722196887454,8.419859905309728],[49.01041733624446,8.434513281076619],[49.0054071827902,8.430735489236495],[49.01389198851223,8.404935632740033],[49.01225911210282,8.400441967783003],[49.007482212341834,8.421674541549722],[49.00799322959017,8.433578582707128],[49.004624076596244,8.424926337598011],[49.009357508876796,8.41825451177587],[49.012527634072335,8.404330105476705],[49.00154003366433,8.408351267979356],[49.00122913523717,8.414176818141959],[49.00522552601198,8.404575283624201],[49.0136145782862,8.425200251728103],[49.00002303662352,8.42865352688188],[49.00224552058718,8.400753889762823],[49.000750928381834,8.434705664241463],[49.000547218582966,8.411026022050574],[49.005390972076285,8.362978730469113],[49.00723859209268,8.425613792767763],[49.01109147132396,8.426127277015201],[49.00149309730493,8.398440955156873],[49.01320388348276,8.412797289381997],[49.0116567041518,8.426342328790858],[49.003785977713534,8.410255501097563],[49.00065886636548,8.421230066733802],[49.008650171044714,8.408081988278564],[49.00465275814264,8.422684783751178],[49.00599163093602,8.410801781747312],[48.99732246826108,8.421536221238698],[49.013522350534096,8.419809836572789],[48.999757574077194,8.365396967041],[49.00930649219224,8.434605985348409],[49.004440357237215,8.411051936248704],[49.01008973843096,8.430406488177063],[48.9995703877172,8.36986981705494],[49.01335705053361,8.420730872600158],[49.005590477459535,8.39571692055965],[48.99666225688139,8.382497475721472],[48.9988196509939,8.410024255933099],[49.0128250915328,8.426471229621372],[49.00645998654949,8.425828889326223],[49.007596775024574,8.420894064042614],[49.00608623684878,8.395057340713395],[49.011085685711485,8.384855093421404],[49.00576336523836,8.387165478243123],[48.99823163065105,8.375657235695472],[49.007293086577235,8.421368580604222],[49.01068645615741,8.42147155117122],[49.00869795314386,8.416559423405772],[49.00507063191194,8.415146074562095],[49.00903286864781,8.378795128041606],[49.00677747712634,8.413302827268886],[49.012004591219196,8.405232521718807],[49.00655595377046,8.391150194250894],[49.012986465035134,8.428995811256963],[49.006728424551774,8.40677368053773],[49.00769814443821,8.428001330039308],[49.00247772091666,8.433301667173776],[49.01306906225475,8.41020093056268],[49.00733884164155,8.414275025687171],[49.00877956028517,8.41246701603202],[49.00379883314029,8.368786145986272],[48.999103974617036,8.42356985227956],[49.00519808846081,8.412008222857185],[49.0006421429838,8.423730652439817],[49.00054569218902,8.433011711936283],[49.01184442532299,8.407375646982697],[49.00273718412805,8.418948531317179],[49.002046173481915,8.374676756350867],[49.00534037707183,8.400302509960067],[49.00332915297969,8.365938850973341],[48.999740413120165,8.40604098751275],[48.99928481245279,8.424512991667834],[49.01030473606414,8.37026666857118],[49.01093217032746,8.383068110295607],[49.00971971387137,8.419454940192518],[49.004444296091194,8.425778336243747],[49.00958513140714,8.40283142600129],[49.00569156403007,8.402109932456405],[49.01122973757458,8.409968665836953],[49.00693492523012,8.404201840916098],[49.00540200826417,8.424258297757527],[48.997395263009956,8.406438573776642],[49.00890540469116,8.417129708940184],[49.00937368495375,8.431760438106966],[49.01324925077818,8.415523118050675],[49.00035063216086,8.369170889554654],[48.99880594862306,8.401081321109228],[48.9994908540159,8.416576427544777],[49.001545039279755,8.431622063659413],[49.00209580440806,8.400626214783511],[48.99709832108256,8.432121026034697],[48.9985201067007,8.401246763470143],[49.00227086696463,8.371674453537883],[49.00141631242452,8.39261942235748],[49.0077554075948,8.418910633253951],[48.998358776249994,8.411075603001438],[49.01355203846562,8.36525580509496],[49.01389710676228,8.403802001513448],[49.00551062284867,8.433476797799834],[48.99949320362953,8.403578519518057],[49.004177572498364,8.416438729297528],[49.00618630175947,8.411505324560705],[48.999267614635535,8.426703002282292],[48.997723529256994,8.38291525824312],[49.00076976260132,8.402438875550168],[49.00744271007634,8.36741192205941],[49.00389644875414,8.410867376624328],[49.001125663757215,8.375897897348283],[49.01243368461053,8.434479902558964],[49.000826639444035,8.391292226385469],[49.00170875063175,8.378983689298552],[49.00098990489239,8.412500004989111],[49.00221955202852,8.387556558400364],[49.00632031844777,8.409455609581752],[49.0010821825104,8.363314255248367],[49.00258598291715,8.420725814502077],[49.01231080850535,8.421270077554345],[49.00272456552157,8.4025428908387],[48.99724501389394,8.385617546444097]]

function getOptStandort(standorte) {
     let xWerte = [];
     let yWerte = [];

     for(let i = 0; i < standorte.length; i++) {
         xWerte.push(standorte[i][0]);
         yWerte.push(standorte[i][1]*10);
     }

     x = getSchwerpunkt(xWerte);
     y = getSchwerpunkt(yWerte);

     //console.log(xWerte,yWerte);

     let f = funktionswert(x,y,xWerte,yWerte);

     let abbruchkriterium = 0.001;

     let xNeu = getXodYNaechsteIt(xWerte,xWerte, yWerte, x, y);
     let yNeu = getXodYNaechsteIt(yWerte,xWerte, yWerte, x, y);
     let fNeu;

     while(delta(f, fNeu) < abbruchkriterium) {
         x = xNeu;
         y = yNeu;
         let xNeu = getXodYNaechsteIt(xWerte,xWerte, yWerte, x, y);
         let yNeu = getXodYNaechsteIt(xWerte,xWerte, yWerte, x, y);
     }

     return [xNeu, yNeu/10];
}

function delta(f1,f2) {
    return (f1-f2)/f1;
}

function funktionswert(x,y,xWerte,yWerte) {
    let funktionswert = 0;
    for (var i = 0; i < xWerte.length; i++) {
        funktionswert += abstand(x,y,xWerte[i],yWerte[i]);
    }
    return funktionswert;
}

function getXodYNaechsteIt(xy, xWerte, yWerte, x,y) {
    let zaehler = 0;
    let nenner = 0;
    for(let i = 0; i < xWerte.length; i++) {
            zaehler += xy[i] / abstand(xWerte[i], yWerte[i], x,y); 
            nenner += 1 / abstand(xWerte[i], yWerte[i], x,y); 
    }
    return zaehler/nenner;
}

function abstand(x1,y1,x2,y2) {
    return Math.sqrt(Math.pow(x1-x2, 2) + Math.pow(y1-y2,2))
}

function getSchwerpunkt(arrayMitWerten) {
    var summe = 0;
    for(let i = 0; i<arrayMitWerten; i++)  {
        summe += arrayMitWerten[i];
    }
    return summe/(arrayMitWerten.length)
}


var http = require('http');

function getData(callback) {
    return http.get({
        host: '52.58.76.156',
        port: '8080',
        path: '/getAllUsers'
    }, function(response) {
        // Continuously update stream with data
        var body = '';
        response.on('data', function(d) {
            body += d;
        });
        response.on('end', function() {

            // Data reception is done, do whatever with it!
            var parsed = JSON.parse(body);
            callback(parsed);
        });
    });
}

var options = {
  host: '52.58.76.156',
  port: 8080,
  path: '/getAllUsers'
};

function getWerte() {
    return new Promise(async (res,rej) => {
        http.get(options, function(resp){
    resp.setEncoding('utf8');
    var data = "";
  resp.on('data', function(chunk){
    data += chunk;
  });
  resp.on('end', function() {
            // Data reception is done, do whatever with it!
            var parsed = JSON.parse(data);
            //console.log(parsed);
            
            res(parsed);
        });
}).on("error", function(e){
  console.log("Got error: " + e.message);
});
})

}

async function berechneOptStandort() {
    //let werte = await getWerte();
    console.log(getOptStandort(werte));
}

berechneOptStandort();



